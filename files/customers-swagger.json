{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Customer",
    "description": "Customers API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Team",
      "email": "example@redhat.com",
      "url": "https://customers.com"
    },
    "license": {
      "name": "GPL",
      "url": ""
    }
  },
  "host": "api-3scale-apicast-production.amp.cloudapps-{guid}.oslab.opentlc.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customers": {
      "get": {
        "description": "Returns all customers",
        "operationId": "customers",
        "parameters": [
          {
            "name": "user_key",
            "in": "query",
            "description": "User Key Authentication Parameter",
			      "x-data-threescale-name": "user_keys",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customer list response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "403": {
            "description": "Authentication failed",
            "schema": {
              "$ref": "#/definitions/AuthenticationFailed"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "description": "Returns customer details based on the ID",
        "operationId": "find customer details by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer detail to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_key",
            "in": "query",
            "description": "User Key Authentication Parameter",
			      "x-data-threescale-name": "user_keys",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customer response",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "403": {
            "description": "Authentication failed",
            "schema": {
              "$ref": "#/definitions/AuthenticationFailed"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Pet": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewPet"
        },
        {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "NewPet": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AuthenticationFailed" : {
      "type": "object",
      "properties": {
        "error code=user_key_invalid": {
          "type": "string",
          "default": "user key {user_key} is invalid"
        }
      }
    }
  }
}